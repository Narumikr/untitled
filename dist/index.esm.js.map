{"version":3,"sources":["styleplugin:F:/untitled/sekai/src/styles/components/Button.module.scss","../src/components/Button.tsx"],"names":[],"mappings":";;;AAAA,IAAO,qBAAQ,GAAA;AAAA,EACb,kBAAoB,EAAA,2BAAA;AAAA,EACpB,2BAA6B,EAAA,qCAAA;AAAA,EAC7B,6BAA+B,EAAA,uCAAA;AAAA,EAC/B,yBAA2B,EAAA,mCAAA;AAAA,EAC3B,0BAA4B,EAAA,oCAAA;AAAA,EAC5B,yBAA2B,EAAA;AAC7B,CAAA;ACSA,IAAM,SAAS,CAAC;AAAA,EACd,OAAU,GAAA,KAAA;AAAA,EACV,IAAO,GAAA,QAAA;AAAA,EACP,eAAA;AAAA,EACA,KAAA;AAAA,EACA,GAAG;AACL,CAAmB,KAAA;AACjB,EAAM,MAAA,IAAA,GAAO,OACT,GAAA,CAAA,EAAG,qBAAO,CAAA,2BAA2B,CAAC,CACtC,CAAA,GAAA,CAAA,EAAG,qBAAO,CAAA,6BAA6B,CAAC,CAAA,CAAA;AAC5C,EACE,uBAAA,GAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MACC,IAAK,EAAA,QAAA;AAAA,MACL,SAAW,EAAA;AAAA,QACT,CAAA,EAAG,qBAAO,CAAA,kBAAkB,CAAC,CAAA,CAAA;AAAA,QAC7B,CAAG,EAAA,qBAAA,CAAO,CAAqB,kBAAA,EAAA,IAAI,EAAE,CAAC,CAAA,CAAA;AAAA,QACtC;AAAA,OACF,CAAE,KAAK,GAAG,CAAA;AAAA,MACV,KAAA,EAAO,EAAE,eAAgB,EAAA;AAAA,MACxB,GAAG,KAAA;AAAA,MACH,QAAA,EAAA;AAAA;AAAA,GACH;AAEJ,CAAA;AACA,IAAO,cAAQ,GAAA","file":"index.esm.js","sourcesContent":["export default {\n  \"storybook-button\": \"_storybook-button_1243a_1\",\n  \"storybook-button--primary\": \"_storybook-button--primary_1243a_11\",\n  \"storybook-button--secondary\": \"_storybook-button--secondary_1243a_16\",\n  \"storybook-button--small\": \"_storybook-button--small_1243a_22\",\n  \"storybook-button--medium\": \"_storybook-button--medium_1243a_27\",\n  \"storybook-button--large\": \"_storybook-button--large_1243a_32\"\n};import \"ni:sha-256;PR1qB2boTXyXD6N2uMvMUWi-JG-i6pClFyJlslw8syY\";","import styles from '@/styles/components/Button.module.scss'\n\nexport type ButtonProps = {\n  /** Is this the principal call to action on the page? */\n  primary?: boolean\n  /** What background color to use */\n  backgroundColor?: string\n  /** How large should the button be? */\n  size?: 'small' | 'medium' | 'large'\n  /** Button contents */\n  label: string\n  /** Optional click handler */\n  onClick?: () => void\n}\n\n/** Primary UI component for user interaction */\nconst Button = ({\n  primary = false,\n  size = 'medium',\n  backgroundColor,\n  label,\n  ...props\n}: ButtonProps) => {\n  const mode = primary\n    ? `${styles['storybook-button--primary']}`\n    : `${styles['storybook-button--secondary']}`\n  return (\n    <button\n      type=\"button\"\n      className={[\n        `${styles['storybook-button']}`,\n        `${styles[`storybook-button--${size}`]}`,\n        mode\n      ].join(' ')}\n      style={{ backgroundColor }}\n      {...props}>\n      {label}\n    </button>\n  )\n}\nexport default Button\n"]}